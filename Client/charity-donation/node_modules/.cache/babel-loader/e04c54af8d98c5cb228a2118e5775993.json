{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Register.js\";\nimport React, { Component } from 'react';\nimport CriptoJS from 'crypto-js';\nimport ResponseType from '../connection/ResponseType';\nimport Connection from '../connection/Connection';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'PERSON'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.registerCharity = this.registerCharity.bind(this);\n    this.registerPerson = this.registerPerson.bind(this);\n  }\n\n  cpfTest(cpf) {\n    let sum = 0;\n    if (!cpf || cpf === \"00000000000\" || cpf === '11111111111' || cpf === '22222222222' || cpf === \"33333333333\" || cpf === \"44444444444\" || cpf === \"55555555555\" || cpf === \"66666666666\" || cpf === \"77777777777\" || cpf === \"88888888888\" || cpf === \"99999999999\") return false;\n\n    for (let i = 1; i <= 9; i++) sum = sum + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n    let rest = sum * 10 % 11;\n    if (rest === 10 || rest === 11) rest = 0;\n    if (rest !== parseInt(cpf.substring(9, 10))) return false;\n    sum = 0;\n\n    for (let i = 1; i <= 10; i++) sum = sum + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n    rest = sum * 10 % 11;\n    if (rest === 10 || rest === 11) rest = 0;\n    if (rest !== parseInt(cpf.substring(10, 11))) return false;\n    return true;\n  }\n\n  registerCharity() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.registerCharity, 10); // TODO verificar cnpj\n    // if (!this.cnpjTest(this.state.cnpj)) {\n    //     this.setState({\n    //         error: \"CNPJ inválido!\"\n    //     })\n    //     return\n    // }\n\n    const charity = {\n      name: this.state.name,\n      username: this.state.username,\n      password: CriptoJS.MD5(this.state.password),\n      email: this.state.email,\n      address: this.state.address,\n      cnpj: this.state.cnpj,\n      webpage: this.state.webpage,\n      field: this.state.field\n    };\n    const msg = {\n      type: ResponseType.REGISTER_CHARITY,\n      message: JSON.stringify(charity)\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  registerPerson() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.registerPerson, 10);\n\n    if (!this.cpfTest(this.state.cpf)) {\n      this.setState({\n        error: \"CPF inválido!\"\n      });\n      return;\n    }\n\n    const hashPass = CriptoJS.MD5(this.state.password);\n    console.log(hashPass.toString);\n    const person = {\n      name: this.state.name,\n      username: this.state.username,\n      password: this.state.password,\n      email: this.state.email,\n      address: this.state.address,\n      cpf: this.state.cpf\n    };\n    const msg = {\n      type: ResponseType.REGISTER_PERSON,\n      message: JSON.stringify(person) // this.socket.send(JSON.stringify(msg))\n\n    };\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    switch (this.state.type) {\n      case 'CHARITY':\n        this.registerCharity();\n        break;\n\n      case 'PERSON':\n        this.registerPerson();\n        break;\n\n      default:\n    }\n  }\n\n  handleClick(event) {\n    this.setState({\n      type: event.target.name.toUpperCase(),\n      error: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: ''\n    });\n  } //TODO arrumar responses possiveis\n\n\n  setupSocket() {\n    this.socket = Connection;\n    this.socket.binaryType = 'arraybuffer';\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.DEBUG:\n          console.log(response.message);\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Registrar\"), React.createElement(\"button\", {\n      name: \"charity\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Cadastrar institui\\xE7\\xE3o\"), React.createElement(\"button\", {\n      name: \"person\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Cadastrar pessoa\"), React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"form\", {\n      name: \"register\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"address\",\n      type: \"text\",\n      placeholder: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), this.state.type === 'CHARITY' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"cnpj\",\n      type: \"text\",\n      placeholder: \"cnpj\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"webpage\",\n      type: \"url\",\n      placeholder: \"webpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"field\",\n      type: \"text\",\n      placeholder: \"campo de atua\\xE7\\xE3o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    })), this.state.type === 'PERSON' && React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"cpf\",\n      type: \"text\",\n      placeholder: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Registrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Register.js"],"names":["React","Component","CriptoJS","ResponseType","Connection","Register","constructor","props","state","type","handleClick","bind","handleSubmit","handleChange","registerCharity","registerPerson","cpfTest","cpf","sum","i","parseInt","substring","rest","socket","readyState","OPEN","setTimeout","charity","name","username","password","MD5","email","address","cnpj","webpage","field","msg","REGISTER_CHARITY","message","JSON","stringify","send","setState","error","hashPass","console","log","toString","person","REGISTER_PERSON","event","preventDefault","target","toUpperCase","value","setupSocket","binaryType","onmessage","r","response","parse","data","DEBUG","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CriptoJS from 'crypto-js'\nimport ResponseType from '../connection/ResponseType'\nimport Connection from '../connection/Connection'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            type: 'PERSON'\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.registerCharity = this.registerCharity.bind(this)\n        this.registerPerson = this.registerPerson.bind(this)\n    }\n\n    cpfTest(cpf) {\n        let sum = 0;\n\n        if (!cpf || cpf === \"00000000000\" || cpf === '11111111111' || cpf === '22222222222'\n        || cpf === \"33333333333\" || cpf === \"44444444444\" || cpf === \"55555555555\" \n        || cpf === \"66666666666\" || cpf === \"77777777777\" || cpf === \"88888888888\"\n        || cpf === \"99999999999\") return false;\n         \n        for (let i=1; i<=9; i++) sum = sum + parseInt(cpf.substring(i-1, i)) * (11 - i);\n        let rest = (sum * 10) % 11;\n       \n        if ((rest === 10) || (rest === 11))  rest = 0;\n        if (rest !== parseInt(cpf.substring(9, 10)) ) return false;\n       \n      sum = 0;\n        for (let i = 1; i <= 10; i++) sum = sum + parseInt(cpf.substring(i-1, i)) * (12 - i);\n        rest = (sum * 10) % 11;\n       \n        if ((rest === 10) || (rest === 11))  rest = 0;\n        if (rest !== parseInt(cpf.substring(10, 11) ) ) return false;\n        return true;\n    }\n\n    registerCharity() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.registerCharity, 10)\n\n        // TODO verificar cnpj\n        // if (!this.cnpjTest(this.state.cnpj)) {\n        //     this.setState({\n        //         error: \"CNPJ inválido!\"\n        //     })\n        //     return\n        // }\n\n        const charity = {\n            name: this.state.name,\n            username: this.state.username,\n            password: CriptoJS.MD5(this.state.password),\n            email: this.state.email,\n            address: this.state.address,\n            cnpj: this.state.cnpj,\n            webpage: this.state.webpage,\n            field: this.state.field\n        }\n\n        const msg = {\n            type: ResponseType.REGISTER_CHARITY,\n            message: JSON.stringify(charity)\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    registerPerson() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.registerPerson, 10)\n\n        if (!this.cpfTest(this.state.cpf)) {\n            this.setState({\n                error: \"CPF inválido!\"\n            })\n            return\n        }\n\n        const hashPass = CriptoJS.MD5(this.state.password);\n        console.log(hashPass.toString)\n        const person = {\n            name: this.state.name,\n            username: this.state.username,\n            password: this.state.password,\n            email: this.state.email,\n            address: this.state.address,\n            cpf: this.state.cpf\n        }\n\n        const msg = {\n            type: ResponseType.REGISTER_PERSON,\n            message: JSON.stringify(person)\n        }\n\n        // this.socket.send(JSON.stringify(msg))\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n\n        switch(this.state.type) {\n            case 'CHARITY':\n                this.registerCharity()\n                break\n            case 'PERSON':\n                this.registerPerson()\n                break\n            default:\n        }\n    }\n\n    handleClick(event) {\n        this.setState({\n            type: event.target.name.toUpperCase(),\n            error: ''\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: ''\n        })\n    }\n\n    //TODO arrumar responses possiveis\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.binaryType = 'arraybuffer'\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.DEBUG:\n                    console.log(response.message)\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Registrar</h2>\n                <button name='charity' onClick={this.handleClick}>Cadastrar instituição</button>\n                <button name='person' onClick={this.handleClick}>Cadastrar pessoa</button>\n                <p className='error'>{this.state.error}</p>\n                <form name='register' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='name' type='text' placeholder='nome'/>\n                    <input onChange={this.handleChange} name='username' type='text' placeholder='username'/>\n                    <input onChange={this.handleChange} name='password' type='password' placeholder='senha'/>\n                    <input onChange={this.handleChange} name='address' type='text' placeholder='address'/>\n                    <input onChange={this.handleChange} name='email' type='email' placeholder='email'/>\n\n                    { this.state.type === 'CHARITY' &&\n                    <div>\n                        <input onChange={this.handleChange} name='cnpj' type='text' placeholder='cnpj'/>\n                        <input onChange={this.handleChange} name='webpage' type='url' placeholder='webpage'/>\n                        <input onChange={this.handleChange} name='field' type='text' placeholder='campo de atuação'/>\n                    </div> }\n                    \n                    { this.state.type === 'PERSON' && \n                    <input onChange={this.handleChange} name='cpf' type='text' placeholder='cpf'/> }\n\n                    <input type='submit' value='Registrar'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}