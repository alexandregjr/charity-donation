{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Charity.js\";\nimport React, { Component } from 'react';\nimport Needs from './components/Needs';\nimport Connection from '../connection/Connection';\nimport ResponseType from '../connection/ResponseType';\n\nclass Charity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      content: {},\n      errorMessage: '',\n      error: false,\n      donated: false\n    };\n    this.query = this.query.bind(this);\n    this.setContent = this.setContent.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.donationSuccessful = this.donationSuccessful.bind(this);\n  }\n\n  query() {\n    const msg = {\n      id: this.props.match.params.id,\n      type: ResponseType.CHARITY\n    };\n    if (this.socket.readyState === this.socket.OPEN) this.socket.send(JSON.stringify(msg));else setTimeout(this.query, 10);\n  }\n\n  setContent(content) {\n    this.setState({\n      error: false,\n      loading: false,\n      content: JSON.parse(content)\n    });\n  }\n\n  setError(error) {\n    this.setState({\n      errorMessage: error,\n      error: true\n    });\n  }\n\n  donationSuccessful(message) {\n    this.setState({\n      donated: true,\n      result: message\n    });\n  }\n\n  donationFailed(message) {\n    this.setState({\n      errorDonation: true,\n      errorMessage: message\n    });\n  }\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          switch (response.id) {\n            case -2:\n              // -2 é id de charity\n              this.setContent(response.message);\n              break;\n\n            case -4:\n              // -4 é id de donation\n              this.donationSuccessful(response.message);\n              break;\n\n            default:\n          }\n\n          break;\n\n        case ResponseType.FAIL:\n          switch (response.id) {\n            case -2:\n              // -2 é id de charity\n              this.setError(response.message);\n              break;\n\n            case -4:\n              // -4 é id de donation\n              this.donationFailed(response.message);\n              break;\n\n            default:\n          }\n\n          break;\n\n        default:\n          this.setState({\n            error: true,\n            errorMessage: 'Erro: Indefinido.'\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n    this.query();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      donated: false\n    });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    if (this.state.donation === undefined) return;\n    if (!this.state.amount) return;\n    this.donate();\n  }\n\n  donate() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.donate, 10);\n    const donation = {\n      donor: {\n        id: sessionStorage.getItem('id')\n      },\n      receiver: {\n        id: this.props.match.params.id\n      },\n      donation: {\n        id: this.state.content.needs.needs[this.state.donation].id\n      },\n      amount: this.state.amount\n    };\n    const msg = {\n      id: sessionStorage.getItem('type') === 'CHARITY' ? 1 : 0,\n      //0 person, 1 charity\n      type: ResponseType.DONATE,\n      message: JSON.stringify(donation)\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  render() {\n    const content = this.state.content;\n    let needs;\n    if (!content.needs) needs = [];else if (!content.needs.needs) needs = [];else needs = content.needs.needs;\n    const needsSelector = needs.map((need, index) => React.createElement(\"label\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"radio\",\n      name: \"donation\",\n      value: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), need.name));\n    return this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, this.state.errorMessage) : this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Loading data...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, content.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, content.field), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, content.description), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"Lista de nec.\"), this.state.donated && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, this.state.result), React.createElement(\"form\", {\n      name: \"donate\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, needsSelector, this.state.donation && React.createElement(\"input\", {\n      type: \"number\",\n      name: \"amount\",\n      min: \"1\",\n      max: needs[this.state.donation].amount,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar doa\\xE7\\xE3o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Charity;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Charity.js"],"names":["React","Component","Needs","Connection","ResponseType","Charity","constructor","props","state","loading","content","errorMessage","error","donated","query","bind","setContent","handleChange","handleSubmit","donationSuccessful","msg","id","match","params","type","CHARITY","socket","readyState","OPEN","send","JSON","stringify","setTimeout","setState","parse","setError","message","result","donationFailed","errorDonation","setupSocket","onmessage","r","response","data","SUCCESS","FAIL","componentDidMount","event","target","name","value","preventDefault","donation","undefined","amount","donate","donor","sessionStorage","getItem","receiver","needs","DONATE","render","needsSelector","map","need","index","field","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Needs from './components/Needs'\nimport Connection from '../connection/Connection'\nimport ResponseType from '../connection/ResponseType'\n\nclass Charity extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            content: {},\n            errorMessage: '',\n            error: false,\n            donated: false\n        }\n\n        this.query = this.query.bind(this)\n        this.setContent = this.setContent.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.donationSuccessful = this.donationSuccessful.bind(this)\n    }\n\n    query() {\n        const msg = {\n            id: this.props.match.params.id,\n            type: ResponseType.CHARITY\n        }\n\n        if (this.socket.readyState === this.socket.OPEN)\n            this.socket.send(JSON.stringify(msg))\n        else setTimeout(this.query, 10)\n    }\n\n    setContent(content) {\n        this.setState({\n            error: false,\n            loading: false,\n            content: JSON.parse(content)\n        })\n    }\n\n    setError(error) {\n        this.setState({\n            errorMessage: error,\n            error: true\n        })\n    }\n\n    donationSuccessful(message) {\n        this.setState({\n            donated: true,\n            result: message\n        })\n    }\n\n    donationFailed(message) {\n        this.setState({\n            errorDonation: true,\n            errorMessage: message\n        })\n    }\n\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    switch(response.id) {\n                        case -2: // -2 é id de charity\n                            this.setContent(response.message)\n                            break\n                        case -4: // -4 é id de donation\n                            this.donationSuccessful(response.message)\n                            break\n                        default:\n                    }\n                    break\n                case ResponseType.FAIL:\n                    switch(response.id) {\n                        case -2: // -2 é id de charity\n                        this.setError(response.message)\n                            break\n                        case -4: // -4 é id de donation\n                            this.donationFailed(response.message)\n                            break\n                        default:\n                    }\n                    break\n                default:\n                      this.setState({\n                        error: true,\n                        errorMessage: 'Erro: Indefinido.'\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n        this.query()\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n            donated: false\n        })\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        if (this.state.donation === undefined) return\n        if (!this.state.amount) return\n\n        this.donate()\n    }\n\n    donate() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.donate, 10)\n\n        const donation = {\n            donor: {\n                id: sessionStorage.getItem('id')\n            },\n            receiver: {\n                id: this.props.match.params.id\n            },\n            donation: {\n                id: this.state.content.needs.needs[this.state.donation].id\n            },\n            amount: this.state.amount\n        }\n\n        const msg = {\n            id: sessionStorage.getItem('type') === 'CHARITY' ? 1 : 0, //0 person, 1 charity\n            type: ResponseType.DONATE,\n            message: JSON.stringify(donation)\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    render() {\n        const { content } = this.state\n\n        let needs\n        if (!content.needs) needs = []\n        else if (!content.needs.needs) needs = []\n        else needs = content.needs.needs\n\n        const needsSelector = needs.map((need, index) => \n            <label key={index}>\n                <input onChange={this.handleChange} type='radio' name='donation' value={index}></input>\n                {need.name}\n            </label>\n        )\n\n        return (\n            this.state.error ?\n            <p>{this.state.errorMessage}</p> :\n            this.state.loading ?\n            <p>Loading data...</p> :\n            <div>\n                <h1>{content.name}</h1>\n                <h2>{content.field}</h2>\n                <p>{content.description}</p>\n\n                <h2>Lista de nec.</h2>\n                {this.state.donated &&\n                <p>{this.state.result}</p>}\n                <form name='donate' onSubmit={this.handleSubmit}>\n                    {needsSelector}\n                    {this.state.donation &&\n                    <input type='number' name='amount' min='1' max={needs[this.state.donation].amount} onChange={this.handleChange}></input>}\n                    <input type='submit' value='Enviar doação'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Charity"]},"metadata":{},"sourceType":"module"}