{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/EditCharity.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport Needs from './components/Needs';\nimport Connection from '../connection/Connection';\nimport ResponseType from '../connection/ResponseType';\n\nclass EditCharity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n    this.handleImages = this.handleImages.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.sendPhotos = this.sendPhotos.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    switch (event.target.name) {\n      case 'needs':\n        this.sendNeeds();\n        break;\n\n      case 'description':\n        this.sendDescription();\n        break;\n\n      case 'photos':\n        this.sendPhotos();\n        break;\n\n      default:\n    }\n  }\n\n  sendDescription() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.sendDescription, 10);\n    const description = this.state.description; // TODO: send id of logged charity\n\n    const msg = {\n      id: 4,\n      type: ResponseType.UPDATE_DESCRIPTION,\n      message: description\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  sendNeeds() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.sendNeeds, 10);\n    const _this$state = this.state,\n          nameNeed = _this$state.nameNeed,\n          amountNeed = _this$state.amountNeed,\n          descriptionNeed = _this$state.descriptionNeed;\n    const needs = {\n      needs: [{\n        name: nameNeed,\n        amount: amountNeed,\n        description: descriptionNeed\n      }] // TODO: send id of logged charity\n\n    };\n    const msg = {\n      id: 4,\n      type: ResponseType.NEEDING,\n      message: JSON.stringify(needs)\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  sendPhotos() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.sendPhotos, 10);\n    const images = this.state.images;\n\n    for (const image of images) {\n      const msg = {\n        type: ResponseType.PHOTO,\n        id: 4\n      };\n      this.socket.send(JSON.stringify(msg));\n      const reader = new FileReader();\n      let data = new ArrayBuffer();\n\n      reader.onload = event => {\n        data = event.target.result;\n        this.socket.send(data);\n      };\n\n      reader.readAsArrayBuffer(image);\n    }\n\n    this.setState({\n      images: []\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleImages(event) {\n    this.setState({\n      images: event.target.files\n    });\n  }\n\n  setupSocket() {\n    this.socket = Connection;\n    this.socket.binaryType = 'arraybuffer';\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.DEBUG:\n          console.log(response.message);\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    const arrayImages = Array.from(this.state.images);\n    const preview = arrayImages.map((image, index) => React.createElement(\"img\", {\n      alt: image.name,\n      src: URL.createObjectURL(image),\n      key: index,\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"form\", {\n      name: \"description\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      name: \"description\",\n      placeholder: \"Escreva a descri\\xE7ao\",\n      style: {\n        resize: 'none'\n      },\n      rows: \"10\",\n      cols: \"40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Alterar descri\\xE7\\xE3o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"Fotos\"), React.createElement(\"form\", {\n      name: \"photos\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        border: '1px solid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"Selecionar imagens\", React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      onChange: this.handleImages,\n      type: \"file\",\n      accept: \"image/png\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, \"Selecionadas\")), preview, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar fotos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"necessidades\"), React.createElement(Needs, {\n      data: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      name: \"needs\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"nameNeed\",\n      type: \"text\",\n      placeholder: \"Item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"amountNeed\",\n      type: \"number\",\n      placeholder: \"Quantidade\",\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      name: \"descriptionNeed\",\n      placeholder: \"Descri\\xE7\\xE3o do item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Adicionar necessidade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EditCharity;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/EditCharity.js"],"names":["React","Component","Redirect","Needs","Connection","ResponseType","EditCharity","constructor","props","state","images","handleImages","bind","handleSubmit","handleChange","sendPhotos","event","preventDefault","target","name","sendNeeds","sendDescription","socket","readyState","OPEN","setTimeout","description","msg","id","type","UPDATE_DESCRIPTION","message","send","JSON","stringify","nameNeed","amountNeed","descriptionNeed","needs","amount","NEEDING","image","PHOTO","reader","FileReader","data","ArrayBuffer","onload","result","readAsArrayBuffer","setState","value","files","setupSocket","binaryType","onmessage","r","response","parse","DEBUG","console","log","error","componentDidMount","render","arrayImages","Array","from","preview","map","index","URL","createObjectURL","resize","border","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport Needs from './components/Needs'\nimport Connection from '../connection/Connection'\nimport ResponseType from '../connection/ResponseType'\n\nclass EditCharity extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: []\n        }\n\n        this.handleImages = this.handleImages.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.sendPhotos = this.sendPhotos.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        switch(event.target.name) {\n            case 'needs':\n                this.sendNeeds()\n                break\n            case 'description':\n                this.sendDescription()\n                break\n            case 'photos':\n                this.sendPhotos()\n                break\n            \n            default:\n        }\n    }\n\n    sendDescription() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.sendDescription, 10)\n\n        const { description } = this.state;\n    \n        // TODO: send id of logged charity\n        const msg = {\n            id: 4,\n            type: ResponseType.UPDATE_DESCRIPTION,\n            message: description\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    \n    }\n\n    sendNeeds() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.sendNeeds, 10)\n\n        const { nameNeed, amountNeed, descriptionNeed } = this.state;\n        \n        const needs = {\n            needs: [{\n                name: nameNeed,\n                amount: amountNeed,\n                description: descriptionNeed\n            }]\n        }\n\n        // TODO: send id of logged charity\n        const msg = {\n            id: 4,\n            type: ResponseType.NEEDING,\n            message: JSON.stringify(needs)\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    sendPhotos() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.sendPhotos, 10)\n\n        const { images } = this.state\n\n        for (const image of images) {\n            const msg = {\n                type: ResponseType.PHOTO,\n                id: 4\n            }\n\n            this.socket.send(JSON.stringify(msg))\n            \n            const reader = new FileReader()\n            let data = new ArrayBuffer()\n\n            reader.onload = (event) => {\n                data = event.target.result\n                this.socket.send(data)\n            }\n\n            reader.readAsArrayBuffer(image)\n        }\n\n        this.setState({\n            images: []\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n           [event.target.name]: event.target.value\n        })\n    }\n\n    handleImages(event) {\n        this.setState({\n            images: event.target.files\n        })\n    }\n\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.binaryType = 'arraybuffer'\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.DEBUG:\n                    console.log(response.message)\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        const arrayImages = Array.from(this.state.images)\n        const preview = arrayImages.map((image, index) => \n            <img alt={image.name} src={URL.createObjectURL(image)} key={index} width='100'/>\n        )\n\n        return (\n            <div>\n                {/* {\n                    !(localStorage.getItem('type') === 'charity') &&\n                    <Redirect to='/' />\n                } */}\n                <h2>Descrição</h2>\n                <form name='description' onSubmit={this.handleSubmit}>\n                    <textarea onChange={this.handleChange} name='description' placeholder='Escreva a descriçao' style={{resize: 'none'}} rows='10' cols='40'></textarea>\n                    <input type='submit' value='Alterar descrição'/>\n                </form>\n\n                <h2>Fotos</h2>\n                <form name='photos' onSubmit={this.handleSubmit}>\n                    <label style={{border: '1px solid'}}>\n                        Selecionar imagens\n                        <input style={{display: 'none'}} onChange={this.handleImages} type='file' accept=\"image/png\" multiple/>\n                    </label>\n                    <p><b>Selecionadas</b></p>\n                    {preview}\n                    <input type='submit' value='Enviar fotos'/>\n                </form>\n\n                <h2>necessidades</h2>\n                <Needs data={[]}/>\n                <form name='needs' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='nameNeed' type='text' placeholder='Item'/>\n                    <input onChange={this.handleChange} name='amountNeed' type='number' placeholder='Quantidade' min='1'/>\n                    <textarea onChange={this.handleChange} name='descriptionNeed' placeholder='Descrição do item'></textarea>\n                    <input type='submit' value='Adicionar necessidade'/>\n                </form>\n                \n            </div>\n        )\n    }\n}\n\nexport default EditCharity"]},"metadata":{},"sourceType":"module"}