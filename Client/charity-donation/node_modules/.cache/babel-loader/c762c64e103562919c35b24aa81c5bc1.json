{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport ResponseType from './responses/ResponseType';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loaded: false,\n      logged: false\n    };\n    this.handleMessage = this.handleMessage.bind(this);\n    this.handleId = this.handleId.bind(this);\n    this.sendData = this.sendData.bind(this);\n    this.login = this.login.bind(this);\n  }\n\n  login() {\n    const msg = {\n      id: this.state.sendId,\n      message: this.state.sendMessage,\n      type: ResponseType.DEBUG\n    };\n    this.socket.send(JSON.stringify(msg));\n    this.setState({\n      logged: true\n    });\n  }\n\n  setupSocket() {\n    this.socket = new WebSocket(\"ws://localhost:9000/\");\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.CHARITIES:\n          // call function to read charities\n          break;\n\n        case ResponseType.CHARITY:\n          // call function to read charity\n          break;\n\n        case ResponseType.DONATE:\n          // call function to display donation status\n          break;\n\n        case ResponseType.DONATIONS_MADE:\n          // call function to read donations of user\n          break;\n\n        case ResponseType.DONATIONS_RECEIVED:\n          // call function to read donations to charity\n          break;\n\n        case ResponseType.NEEDING:\n          // call function to display needs status\n          break;\n\n        case ResponseType.NEEDS:\n          // call function to read needs of charity\n          break;\n\n        case ResponseType.REGISTER_CHARITY:\n          // call function to display registration status\n          break;\n\n        case ResponseType.REGISTER_PERSON:\n          // call function to display registration status\n          break;\n\n        case ResponseType.VALIDATE_DONATION:\n          // call function to display validation status\n          break;\n\n        case ResponseType.DEBUG:\n          this.setState({\n            loaded: true,\n            id: response.id,\n            message: response.message\n          });\n          break;\n\n        default:\n      }\n    };\n\n    this.socket.onopen = () => {\n      this.login();\n    };\n\n    this.socket.onclose = () => {};\n\n    this.socket.onerror = () => {};\n  }\n\n  handleId(event) {\n    this.setState({\n      sendId: event.target.value\n    });\n  }\n\n  handleMessage(event) {\n    this.setState({\n      sendMessage: event.target.value\n    });\n  }\n\n  sendData(event) {\n    this.setupSocket();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), !this.state.logged ? React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"ID\",\n      onChange: this.handleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"Message\",\n      onChange: this.handleMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      onClick: this.sendData,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Enviar\")) : this.state.loaded ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"id: \", this.state.id, \" / message: \", this.state.message) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"loading...\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/App.js"],"names":["React","Component","ResponseType","App","constructor","state","loaded","logged","handleMessage","bind","handleId","sendData","login","msg","id","sendId","message","sendMessage","type","DEBUG","socket","send","JSON","stringify","setState","setupSocket","WebSocket","onmessage","r","response","parse","data","CHARITIES","CHARITY","DONATE","DONATIONS_MADE","DONATIONS_RECEIVED","NEEDING","NEEDS","REGISTER_CHARITY","REGISTER_PERSON","VALIDATE_DONATION","onopen","onclose","onerror","event","target","value","render","logo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ResponseType from './responses/ResponseType';\n\n\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      loaded: false,\n      logged: false\n    }\n\n    this.handleMessage = this.handleMessage.bind(this)\n    this.handleId = this.handleId.bind(this)\n    this.sendData = this.sendData.bind(this)\n    this.login = this.login.bind(this)\n  }\n\n  login() {\n    const msg = {\n      id: this.state.sendId, \n      message: this.state.sendMessage,\n      type: ResponseType.DEBUG\n    }\n    this.socket.send(JSON.stringify(msg))\n\n    this.setState({\n      logged: true\n    })\n  }\n\n  setupSocket() {\n    this.socket = new WebSocket(\"ws://localhost:9000/\")\n\n    this.socket.onmessage = (r) => {\n      const response = JSON.parse(r.data)\n      \n      switch (response.type) {\n        case ResponseType.CHARITIES:\n          // call function to read charities\n          break\n        case ResponseType.CHARITY:\n          // call function to read charity\n          break\n        case ResponseType.DONATE:\n          // call function to display donation status\n          break\n        case ResponseType.DONATIONS_MADE:\n          // call function to read donations of user\n          break\n        case ResponseType.DONATIONS_RECEIVED:\n          // call function to read donations to charity\n          break\n        case ResponseType.NEEDING:\n          // call function to display needs status\n          break\n        case ResponseType.NEEDS:\n          // call function to read needs of charity\n          break\n        case ResponseType.REGISTER_CHARITY:\n          // call function to display registration status\n          break\n        case ResponseType.REGISTER_PERSON:\n          // call function to display registration status\n          break\n        case ResponseType.VALIDATE_DONATION:\n          // call function to display validation status\n          break\n        case ResponseType.DEBUG:\n          this.setState({\n            loaded: true,\n            id: response.id,\n            message: response.message\n          })\n          break\n        default:\n      }\n\n    }\n\n    this.socket.onopen = () => {\n      this.login()\n    }\n\n    this.socket.onclose = () => {\n\n    }\n\n    this.socket.onerror = () => {\n\n    }\n  }\n\n  handleId(event) {\n    this.setState({\n      sendId: event.target.value\n    })\n  }\n\n  handleMessage(event) {\n    this.setState({\n      sendMessage: event.target.value\n    })\n  }\n\n  sendData(event) {\n    this.setupSocket()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {!this.state.logged ?\n            <form>\n              <input type='text' placeholder='ID' onChange={this.handleId}></input>\n              <input type='text' placeholder='Message' onChange={this.handleMessage}></input>\n              <br></br>\n              <p onClick={this.sendData}>Enviar</p>\n            </form>\n            :\n            this.state.loaded ?\n              <p>\n                id: {this.state.id} / message: {this.state.message}\n              </p>\n              :\n              <p>\n                loading...\n              </p>\n            \n        }\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}