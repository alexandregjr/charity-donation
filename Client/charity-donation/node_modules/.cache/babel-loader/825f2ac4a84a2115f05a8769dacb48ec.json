{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Register.js\";\nimport React, { Component } from 'react';\nimport CryptoJS from 'crypto-js';\nimport ResponseType from '../connection/ResponseType';\nimport Connection from '../connection/Connection';\nimport { Redirect } from 'react-router-dom';\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      type: 'PERSON'\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.registerCharity = this.registerCharity.bind(this);\n    this.registerPerson = this.registerPerson.bind(this);\n    this.login = this.login.bind(this);\n    this.setError = this.setError.bind(this);\n    this.logged = this.logged.bind(this);\n  }\n\n  cpfTest(cpf) {\n    let sum = 0;\n    if (!cpf || cpf === \"00000000000\" || cpf === '11111111111' || cpf === '22222222222' || cpf === \"33333333333\" || cpf === \"44444444444\" || cpf === \"55555555555\" || cpf === \"66666666666\" || cpf === \"77777777777\" || cpf === \"88888888888\" || cpf === \"99999999999\") return false;\n\n    for (let i = 1; i <= 9; i++) sum = sum + parseInt(cpf.substring(i - 1, i)) * (11 - i);\n\n    let rest = sum * 10 % 11;\n    if (rest === 10 || rest === 11) rest = 0;\n    if (rest !== parseInt(cpf.substring(9, 10))) return false;\n    sum = 0;\n\n    for (let i = 1; i <= 10; i++) sum = sum + parseInt(cpf.substring(i - 1, i)) * (12 - i);\n\n    rest = sum * 10 % 11;\n    if (rest === 10 || rest === 11) rest = 0;\n    if (rest !== parseInt(cpf.substring(10, 11))) return false;\n    return true;\n  }\n\n  cnpjTest(cnpj) {\n    if (cnpj.size !== 14) return false;\n    const weight = [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n    let sum = 0;\n\n    for (let i = 0; i < 12; i++) {\n      sum += weight[i] * cnpj[i];\n    }\n\n    sum %= 11;\n    let vDigOne;\n    if (sum < 2) vDigOne = 0;else vDigOne = 11 - sum;\n    if (cnpj[12] !== vDigOne) return false;\n    sum = 0;\n    weight = [];\n    weight = [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2];\n\n    for (let i = 0; i < 13; i++) {\n      sum += weight[i] * cnpj[i];\n    }\n\n    sum %= 11;\n    let vDigTwo;\n    if (sum < 2) vDigTwo = 0;else vDigTwo = 11 - sum;\n    if (cnpj[12] !== vDigTwo) return false;\n    return true;\n  }\n\n  registerCharity() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.registerCharity, 10); //TODO verificar cnpj\n\n    if (!this.cnpjTest(this.state.cnpj)) {\n      this.setState({\n        error: \"CNPJ inválido!\"\n      });\n    }\n\n    const hashPass = CryptoJS.MD5(this.state.password);\n    const charity = {\n      name: this.state.name,\n      username: this.state.username,\n      password: hashPass.toString(),\n      email: this.state.email,\n      address: this.state.address,\n      cnpj: this.state.cnpj,\n      webpage: this.state.webpage,\n      field: this.state.field\n    };\n    const msg = {\n      type: ResponseType.REGISTER_CHARITY,\n      message: JSON.stringify(charity)\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  registerPerson() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.registerPerson, 10);\n\n    if (!this.cpfTest(this.state.cpf)) {\n      this.setState({\n        error: \"CPF inválido!\"\n      });\n      return;\n    }\n\n    const hashPass = CryptoJS.MD5(this.state.password);\n    const person = {\n      name: this.state.name,\n      username: this.state.username,\n      password: hashPass.toString(),\n      email: this.state.email,\n      address: this.state.address,\n      cpf: this.state.cpf\n    };\n    const msg = {\n      type: ResponseType.REGISTER_PERSON,\n      message: JSON.stringify(person)\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    switch (this.state.type) {\n      case 'CHARITY':\n        if (this.registerCharity()) this.login();\n        break;\n\n      case 'PERSON':\n        if (this.registerPerson()) this.login();\n        break;\n\n      default:\n    }\n  }\n\n  handleClick(event) {\n    this.setState({\n      type: event.target.name.toUpperCase(),\n      error: ''\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value,\n      error: ''\n    });\n  }\n\n  login() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.login, 10);\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n\n    if (username && password) {\n      const hashPass = CryptoJS.MD5(password);\n      const user = {\n        username: username,\n        password: hashPass.toString()\n      };\n      const msg = {\n        type: ResponseType.LOGIN,\n        message: JSON.stringify(user)\n      };\n      this.socket.send(JSON.stringify(msg));\n    } else {\n      this.setState({\n        errorMessage: 'Insira o nome e a senha'\n      });\n    }\n  }\n\n  logged(id, type) {\n    sessionStorage.setItem('id', id);\n    sessionStorage.setItem('type', type.toUpperCase());\n    window.location.reload();\n  }\n\n  setError(error) {\n    this.setState({\n      errorMessage: error,\n      error: true\n    });\n  } //TODO arrumar responses possiveis\n\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n      console.log(response);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          switch (response.id) {\n            case -9:\n              //charity\n              break;\n\n            case -10:\n              // person\n              break;\n\n            default:\n              this.logged(response.id, response.message);\n          }\n\n          break;\n\n        case ResponseType.FAIL:\n          switch (response.id) {\n            case -9:\n              //charity\n              this.setError(response.message);\n              break;\n\n            case -10:\n              // person\n              this.setError(response.message);\n              break;\n\n            case -1:\n              this.setError(response.message);\n              break;\n\n            default:\n          }\n\n          break;\n\n        default:\n          this.setState({\n            errorMessage: 'Erro: Indefinido.',\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    return sessionStorage.getItem('id') ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Registrar\"), React.createElement(\"button\", {\n      name: \"charity\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, \"Cadastrar institui\\xE7\\xE3o\"), React.createElement(\"button\", {\n      name: \"person\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }, \"Cadastrar pessoa\"), this.state.error && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(\"form\", {\n      name: \"register\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"nome\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"address\",\n      type: \"text\",\n      placeholder: \"address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), this.state.type === 'CHARITY' && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"cnpj\",\n      type: \"text\",\n      placeholder: \"cnpj\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"webpage\",\n      type: \"url\",\n      placeholder: \"webpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"field\",\n      type: \"text\",\n      placeholder: \"campo de atua\\xE7\\xE3o\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    })), this.state.type === 'PERSON' && React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"cpf\",\n      type: \"text\",\n      placeholder: \"cpf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Registrar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Register.js"],"names":["React","Component","CryptoJS","ResponseType","Connection","Redirect","Register","constructor","props","state","type","handleClick","bind","handleSubmit","handleChange","registerCharity","registerPerson","login","setError","logged","cpfTest","cpf","sum","i","parseInt","substring","rest","cnpjTest","cnpj","size","weight","vDigOne","vDigTwo","socket","readyState","OPEN","setTimeout","setState","error","hashPass","MD5","password","charity","name","username","toString","email","address","webpage","field","msg","REGISTER_CHARITY","message","JSON","stringify","send","person","REGISTER_PERSON","event","preventDefault","target","toUpperCase","value","user","LOGIN","errorMessage","id","sessionStorage","setItem","window","location","reload","setupSocket","onmessage","r","response","parse","data","console","log","SUCCESS","FAIL","componentDidMount","render","getItem"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport CryptoJS from 'crypto-js'\nimport ResponseType from '../connection/ResponseType'\nimport Connection from '../connection/Connection'\nimport { Redirect } from 'react-router-dom'\n\nclass Register extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            type: 'PERSON'\n        }\n\n        this.handleClick = this.handleClick.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.registerCharity = this.registerCharity.bind(this)\n        this.registerPerson = this.registerPerson.bind(this)\n        this.login = this.login.bind(this)\n        this.setError = this.setError.bind(this)\n        this.logged = this.logged.bind(this)\n    }\n\n    cpfTest(cpf) {\n        let sum = 0;\n\n        if (!cpf || cpf === \"00000000000\" || cpf === '11111111111' || cpf === '22222222222'\n        || cpf === \"33333333333\" || cpf === \"44444444444\" || cpf === \"55555555555\" \n        || cpf === \"66666666666\" || cpf === \"77777777777\" || cpf === \"88888888888\"\n        || cpf === \"99999999999\") return false;\n         \n        for (let i=1; i<=9; i++) sum = sum + parseInt(cpf.substring(i-1, i)) * (11 - i);\n        let rest = (sum * 10) % 11;\n       \n        if ((rest === 10) || (rest === 11))  rest = 0;\n        if (rest !== parseInt(cpf.substring(9, 10)) ) return false;\n       \n      sum = 0;\n        for (let i = 1; i <= 10; i++) sum = sum + parseInt(cpf.substring(i-1, i)) * (12 - i);\n        rest = (sum * 10) % 11;\n       \n        if ((rest === 10) || (rest === 11))  rest = 0;\n        if (rest !== parseInt(cpf.substring(10, 11) ) ) return false;\n        return true;\n    }\n\n    cnpjTest(cnpj){\n        if(cnpj.size !== 14) return false\n        const weight = [5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]\n        let sum = 0;\n        for(let i =0; i < 12; i++){\n            sum += weight[i] * cnpj[i]\n        }\n        sum %= 11;\n        let vDigOne\n        if(sum < 2) vDigOne = 0;\n        else vDigOne = 11 - sum;\n        if(cnpj[12] !== vDigOne) return false\n        sum = 0;\n        weight = [];\n        weight = [6, 5, 4, 3, 2, 9, 8, 7, 6, 5, 4, 3, 2]\n        for(let i = 0; i < 13; i++){\n            sum += weight[i] * cnpj[i]\n        }\n        sum %= 11;\n        let vDigTwo\n        if(sum < 2) vDigTwo = 0\n        else vDigTwo = 11 - sum\n        if(cnpj[12] !== vDigTwo) return false\n\n        return true\n    }\n\n    registerCharity() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.registerCharity, 10)\n\n        //TODO verificar cnpj\n        if (!this.cnpjTest(this.state.cnpj)) {\n            this.setState({\n                error: \"CNPJ inválido!\"\n            })\n        }\n\n        const hashPass = CryptoJS.MD5(this.state.password)\n        const charity = {\n            name: this.state.name,\n            username: this.state.username,\n            password: hashPass.toString(),\n            email: this.state.email,\n            address: this.state.address,\n            cnpj: this.state.cnpj,\n            webpage: this.state.webpage,\n            field: this.state.field\n        }\n\n        const msg = {\n            type: ResponseType.REGISTER_CHARITY,\n            message: JSON.stringify(charity)\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    registerPerson() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.registerPerson, 10)\n\n        if (!this.cpfTest(this.state.cpf)) {\n            this.setState({\n                error: \"CPF inválido!\"\n            })\n            return\n        }\n\n        const hashPass = CryptoJS.MD5(this.state.password)\n        const person = {\n            name: this.state.name,\n            username: this.state.username,\n            password: hashPass.toString(),\n            email: this.state.email,\n            address: this.state.address,\n            cpf: this.state.cpf\n        }\n\n        const msg = {\n            type: ResponseType.REGISTER_PERSON,\n            message: JSON.stringify(person)\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n\n        switch(this.state.type) {\n            case 'CHARITY':\n                if(this.registerCharity())\n                    this.login()\n                break\n            case 'PERSON':\n                if(this.registerPerson())\n                    this.login()\n                break\n            default:\n        }\n    }\n\n    handleClick(event) {\n        this.setState({\n            type: event.target.name.toUpperCase(),\n            error: ''\n        })\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value,\n            error: ''\n        })\n    }\n\n    login() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.login, 10)\n\n        const { username, password } = this.state\n        if (username && password) {\n            const hashPass = CryptoJS.MD5(password)\n            const user = {\n                username: username,\n                password: hashPass.toString()\n            }\n\n            const msg = {\n                type: ResponseType.LOGIN,\n                message: JSON.stringify(user)\n            }\n\n            this.socket.send(JSON.stringify(msg))\n        } else {\n            this.setState({\n                errorMessage: 'Insira o nome e a senha'\n            })\n        }\n    }\n\n    logged(id, type) {\n        sessionStorage.setItem('id', id)\n        sessionStorage.setItem('type', type.toUpperCase())   \n        window.location.reload()     \n    }\n\n    setError(error) {\n        this.setState({\n            errorMessage: error, \n            error: true\n        })\n    }\n\n    //TODO arrumar responses possiveis\n    setupSocket() {\n        this.socket = Connection\n        \n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            console.log(response)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    switch(response.id) {\n                        case -9: //charity\n                            break\n                        case -10: // person\n                            break\n                        default:\n                            this.logged(response.id, response.message)\n                    }\n                    break\n                case ResponseType.FAIL:\n                    switch(response.id) {\n                        case -9: //charity\n                            this.setError(response.message)\n                            break\n                        case -10: // person\n                            this.setError(response.message)\n                            break\n                        case -1:\n                            this.setError(response.message)\n                            break\n                        default:\n                    }\n                    \n                    break\n                default:\n                    this.setState({\n                        errorMessage: 'Erro: Indefinido.',\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        return (\n            sessionStorage.getItem('id') ?\n            <Redirect to='/'></Redirect> :\n            <div>\n                <h2>Registrar</h2>\n                <button name='charity' onClick={this.handleClick}>Cadastrar instituição</button>\n                <button name='person' onClick={this.handleClick}>Cadastrar pessoa</button>\n                {this.state.error &&\n                <p>{this.state.errorMessage}</p>}\n                <form name='register' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='name' type='text' placeholder='nome'/>\n                    <input onChange={this.handleChange} name='username' type='text' placeholder='username'/>\n                    <input onChange={this.handleChange} name='password' type='password' placeholder='senha'/>\n                    <input onChange={this.handleChange} name='address' type='text' placeholder='address'/>\n                    <input onChange={this.handleChange} name='email' type='email' placeholder='email'/>\n\n                    { this.state.type === 'CHARITY' &&\n                    <div>\n                        <input onChange={this.handleChange} name='cnpj' type='text' placeholder='cnpj'/>\n                        <input onChange={this.handleChange} name='webpage' type='url' placeholder='webpage'/>\n                        <input onChange={this.handleChange} name='field' type='text' placeholder='campo de atuação'/>\n                    </div> }\n                    \n                    { this.state.type === 'PERSON' && \n                    <input onChange={this.handleChange} name='cpf' type='text' placeholder='cpf'/> }\n\n                    <input type='submit' value='Registrar'/>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Register"]},"metadata":{},"sourceType":"module"}