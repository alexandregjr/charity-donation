{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport ResponseType from '../connection/ResponseType';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n\n    if (username && password) {\n      const user = {\n        username: username,\n        password: password\n      };\n      const msg = {\n        type: ResponseType.LOGIN,\n        message: JSON.stringify(user)\n      };\n      this.socket.send(JSON.stringify(msg));\n    } else {\n      this.setState({\n        error: 'Insira o nome e a senha'\n      });\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  logged() {\n    localStorage.setItem('id', response.id);\n    localStorage.setItem('type', response.message);\n  }\n\n  loginError() {} //TODO arrumar responses possiveis\n\n\n  setupSocket() {\n    this.socket = Connection;\n    this.socket.binaryType = 'arraybuffer';\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          this.logged();\n          break;\n\n        case ResponseType.FAIL:\n          this.loginError();\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Logar\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"form\", {\n      name: \"login\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Login.js"],"names":["React","Component","ResponseType","Login","constructor","props","state","error","handleSubmit","bind","handleChange","event","preventDefault","username","password","user","msg","type","LOGIN","message","JSON","stringify","socket","send","setState","target","name","value","logged","localStorage","setItem","response","id","loginError","setupSocket","Connection","binaryType","onmessage","r","parse","data","SUCCESS","FAIL","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ResponseType from '../connection/ResponseType';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            error: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        const { username, password } = this.state\n        if (username && password) {\n            const user = {\n                username: username,\n                password: password\n            }\n\n            const msg = {\n                type: ResponseType.LOGIN,\n                message: JSON.stringify(user)\n            }\n\n            this.socket.send(JSON.stringify(msg))\n        } else {\n            this.setState({\n                error: 'Insira o nome e a senha'\n            })\n        }\n    } \n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    logged() {\n        localStorage.setItem('id', response.id)\n        localStorage.setItem('type', response.message)            \n    }\n\n    loginError() {\n\n    }\n\n    //TODO arrumar responses possiveis\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.binaryType = 'arraybuffer'\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    this.logged()\n                    break\n                case ResponseType.FAIL:\n                    this.loginError()\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Logar</h2>\n                <p>{this.state.error}</p>\n                <form name='login' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='username' type='text' placeholder='username'></input>\n                    <input onChange={this.handleChange} name='password' type='password' placeholder='senha'></input>\n                    <input type='submit' value='login'></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}