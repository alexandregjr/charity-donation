{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Charity.js\";\nimport React, { Component } from 'react';\nimport Needs from './components/Needs';\nimport Connection from '../connection/Connection';\nimport ResponseType from '../connection/ResponseType';\n\nclass Charity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      content: {},\n      errorMessage: '',\n      error: false\n    };\n    this.query = this.query.bind(this);\n    this.setContent = this.setContent.bind(this);\n  }\n\n  query() {\n    const msg = {\n      id: this.props.match.params.id,\n      type: ResponseType.CHARITY\n    };\n    if (this.socket.readyState === this.socket.OPEN) this.socket.send(JSON.stringify(msg));else setTimeout(this.query, 10);\n  }\n\n  setContent(content) {\n    this.setState({\n      error: false,\n      loading: false,\n      content: JSON.parse(content)\n    });\n  }\n\n  setError(error) {\n    this.setState({\n      errorMessage: error,\n      error: true\n    });\n  }\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n      console.log(response);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          this.setContent(response.message);\n          break;\n\n        case ResponseType.FAIL:\n          this.setError(response.message);\n          break;\n\n        default:\n          this.setState({\n            error: true,\n            errorMessage: 'Error: Undefined error'\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n    this.query();\n  }\n\n  render() {\n    const content = this.state.content;\n    let needs;\n    if (!content.needs) needs = [];else if (!content.needs.needs) needs = [];else needs = content.needs.needs;\n    const needsSelector = needs.map((need, index) => React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      key: index,\n      type: \"radio\",\n      name: need.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), need.name) // <li key={index}>{need.name} - {need.amount}</li>\n    );\n    return this.state.error ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, this.state.errorMessage) : this.state.loading ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Loading data...\") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, content.name), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, content.field), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, content.description), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Lista de nec.\"), React.createElement(Needs, {\n      data: content.needs,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), needsSelector);\n  }\n\n}\n\nexport default Charity;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Charity.js"],"names":["React","Component","Needs","Connection","ResponseType","Charity","constructor","props","state","loading","content","errorMessage","error","query","bind","setContent","msg","id","match","params","type","CHARITY","socket","readyState","OPEN","send","JSON","stringify","setTimeout","setState","parse","setError","setupSocket","onmessage","r","response","data","console","log","SUCCESS","message","FAIL","componentDidMount","render","needs","needsSelector","map","need","index","name","field","description"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport Needs from './components/Needs'\nimport Connection from '../connection/Connection'\nimport ResponseType from '../connection/ResponseType'\n\nclass Charity extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            content: {},\n            errorMessage: '',\n            error: false\n        }\n\n        this.query = this.query.bind(this)\n        this.setContent = this.setContent.bind(this)\n    }\n\n    query() {\n        const msg = {\n            id: this.props.match.params.id,\n            type: ResponseType.CHARITY\n        }\n\n        if (this.socket.readyState === this.socket.OPEN)\n            this.socket.send(JSON.stringify(msg))\n        else setTimeout(this.query, 10)\n    }\n\n    setContent(content) {\n        this.setState({\n            error: false,\n            loading: false,\n            content: JSON.parse(content)\n        })\n    }\n\n    setError(error) {\n        this.setState({\n            errorMessage: error,\n            error: true\n        })\n    }\n\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            console.log(response)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    this.setContent(response.message)\n                    break\n                case ResponseType.FAIL:\n                    this.setError(response.message)\n                    break\n                default:\n                    this.setState({\n                        error: true,\n                        errorMessage: 'Error: Undefined error'\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n        this.query()\n    }\n\n    render() {\n        const { content } = this.state\n\n        let needs\n        if (!content.needs) needs = []\n        else if (!content.needs.needs) needs = []\n        else needs = content.needs.needs\n\n\n        const needsSelector = needs.map((need, index) => \n            <label>\n                <input key={index} type='radio' name={need.name}></input>\n                {need.name}\n            </label>\n            // <li key={index}>{need.name} - {need.amount}</li>\n        )\n\n        return (\n            this.state.error ?\n            <p>{this.state.errorMessage}</p> :\n            this.state.loading ?\n            <p>Loading data...</p> :\n            <div>\n                <h1>{content.name}</h1>\n                <h2>{content.field}</h2>\n                <p>{content.description}</p>\n\n                <h2>Lista de nec.</h2>\n                <Needs data={content.needs} />\n                {needsSelector}\n            </div>\n        )\n    }\n}\n\nexport default Charity"]},"metadata":{},"sourceType":"module"}