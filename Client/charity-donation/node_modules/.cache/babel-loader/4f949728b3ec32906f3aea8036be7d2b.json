{"ast":null,"code":"const Connection = () => {\n  let instance;\n\n  function createInstance() {\n    const socket = new WebSocket(\"ws://localhost:9000\");\n    return socket;\n  }\n\n  return !instance ? instance = createInstance() : instance;\n};\n\nexport default Connection; // this.socket.onmessage = (r) => {\n//     const response = JSON.parse(r.data);\n//     switch (response.type) {\n//         case ResponseType.CHARITIES:\n//             // call function to read charities\n//             break;\n//         case ResponseType.CHARITY:\n//             // call function to read charity\n//             break;\n//         case ResponseType.DONATE:\n//             // call function to display donation status\n//             break;\n//         case ResponseType.DONATIONS_MADE:\n//             // call function to read donations of user\n//             break;\n//         case ResponseType.DONATIONS_RECEIVED:\n//             // call function to read donations to charity\n//             break;\n//         case ResponseType.NEEDING:\n//             // call function to display needs status\n//             break;\n//         case ResponseType.NEEDS:\n//             // call function to read needs of charity\n//             break;\n//         case ResponseType.REGISTER_CHARITY:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.REGISTER_PERSON:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.VALIDATE_DONATION:\n//             // call function to display validation status\n//             break;\n//         case ResponseType.DEBUG:\n//             this.setState({\n//                 loaded: true,\n//                 id: response.id,\n//                 message: response.message\n//             });\n//             break;\n//         default:\n//     }\n// };\n// this.socket.onopen = () => {\n//     this.login();\n// };\n// this.socket.onclose = () => {\n// };\n// this.socket.onerror = () => {\n// };","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/connection/Connection.js"],"names":["Connection","instance","createInstance","socket","WebSocket"],"mappings":"AAEA,MAAMA,UAAU,GAAG,MAAM;AACrB,MAAIC,QAAJ;;AAEA,WAASC,cAAT,GAA0B;AACtB,UAAMC,MAAM,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CAAf;AAEA,WAAOD,MAAP;AACH;;AAED,SACI,CAACF,QAAD,GAAYA,QAAQ,GAAGC,cAAc,EAArC,GAA0CD,QAD9C;AAGH,CAZD;;AAcA,eAAeD,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\nconst Connection = () => {\n    let instance\n\n    function createInstance() {\n        const socket = new WebSocket(\"ws://localhost:9000\")\n       \n        return socket\n    }\n\n    return (\n        !instance ? instance = createInstance() : instance\n    ) \n}\n\nexport default Connection\n  \n// this.socket.onmessage = (r) => {\n//     const response = JSON.parse(r.data);\n//     switch (response.type) {\n//         case ResponseType.CHARITIES:\n//             // call function to read charities\n//             break;\n//         case ResponseType.CHARITY:\n//             // call function to read charity\n//             break;\n//         case ResponseType.DONATE:\n//             // call function to display donation status\n//             break;\n//         case ResponseType.DONATIONS_MADE:\n//             // call function to read donations of user\n//             break;\n//         case ResponseType.DONATIONS_RECEIVED:\n//             // call function to read donations to charity\n//             break;\n//         case ResponseType.NEEDING:\n//             // call function to display needs status\n//             break;\n//         case ResponseType.NEEDS:\n//             // call function to read needs of charity\n//             break;\n//         case ResponseType.REGISTER_CHARITY:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.REGISTER_PERSON:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.VALIDATE_DONATION:\n//             // call function to display validation status\n//             break;\n//         case ResponseType.DEBUG:\n//             this.setState({\n//                 loaded: true,\n//                 id: response.id,\n//                 message: response.message\n//             });\n//             break;\n//         default:\n//     }\n// };\n// this.socket.onopen = () => {\n//     this.login();\n// };\n// this.socket.onclose = () => {\n// };\n// this.socket.onerror = () => {\n// };"]},"metadata":{},"sourceType":"module"}