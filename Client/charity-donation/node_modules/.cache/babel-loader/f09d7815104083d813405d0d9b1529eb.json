{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/EditCharity.js\";\nimport React, { Component } from 'react';\nimport Needs from './components/Needs';\nimport Connection from '../connection/Connection';\nimport ResponseType from '../connection/ResponseType';\n\nclass EditCharity extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      images: []\n    };\n    this.handleImages = this.handleImages.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.sendPhotos = this.sendPhotos.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    switch (event.target.name) {\n      case 'needs':\n        break;\n\n      case 'description':\n        break;\n\n      case 'photos':\n        this.sendPhotos();\n        break;\n\n      default:\n    }\n  }\n\n  sendPhotos() {\n    const images = this.state.images;\n\n    for (const image of images) {\n      const reader = new FileReader();\n      let data = new ArrayBuffer();\n\n      reader.onload = event => {\n        data = event.target.result;\n        if (this.socket.readyState === this.socket.OPEN) this.socket.send(data);else setTimeout(this, 10);\n      };\n\n      reader.readAsArrayBuffer(image);\n    }\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleImages(event) {\n    this.setState({\n      images: event.target.files\n    });\n  }\n\n  setupSocket() {\n    this.socket = Connection;\n    this.socket.binaryType = 'arraybuffer';\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.DEBUG:\n          console.log(response.message);\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    const arrayImages = Array.from(this.state.images);\n    const preview = arrayImages.map((image, index) => React.createElement(\"img\", {\n      alt: image.name,\n      src: URL.createObjectURL(image),\n      key: index,\n      width: \"100\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      placeholder: \"Escreva a descri\\xE7ao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Fotos\"), React.createElement(\"form\", {\n      name: \"photos\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      style: {\n        border: '1px solid'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, \"Selecionar imagens\", React.createElement(\"input\", {\n      style: {\n        display: 'none'\n      },\n      onChange: this.handleImages,\n      type: \"file\",\n      accept: \"image/png\",\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Selecionadas\")), preview, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar fotos\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"necessidades\"), React.createElement(Needs, {\n      data: [],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      name: \"needs\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"item\",\n      type: \"text\",\n      placeholder: \"Item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"amount\",\n      type: \"number\",\n      placeholder: \"Quantidade\",\n      min: \"1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Adicionar necessidade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EditCharity;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/EditCharity.js"],"names":["React","Component","Needs","Connection","ResponseType","EditCharity","constructor","props","state","images","handleImages","bind","handleSubmit","sendPhotos","event","preventDefault","target","name","image","reader","FileReader","data","ArrayBuffer","onload","result","socket","readyState","OPEN","send","setTimeout","readAsArrayBuffer","handleChange","setState","value","files","setupSocket","binaryType","onmessage","r","response","JSON","parse","type","DEBUG","console","log","message","error","componentDidMount","render","arrayImages","Array","from","preview","map","index","URL","createObjectURL","border","display"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Needs from './components/Needs'\nimport Connection from '../connection/Connection'\nimport ResponseType from '../connection/ResponseType'\n\nclass EditCharity extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: []\n        }\n\n        this.handleImages = this.handleImages.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.sendPhotos = this.sendPhotos.bind(this)\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        switch(event.target.name) {\n            case 'needs':\n                \n                break\n            case 'description':\n                \n                break\n            case 'photos':\n                this.sendPhotos()\n                break\n            \n            default:\n        }\n    }\n\n    sendPhotos() {\n        const { images } = this.state;\n        \n\n        for (const image of images) {\n            const reader = new FileReader()\n            let data = new ArrayBuffer()\n\n            reader.onload = (event) => {\n                data = event.target.result\n                if (this.socket.readyState === this.socket.OPEN)\n                    this.socket.send(data)\n                else setTimeout(this, 10)\n            }\n\n            reader.readAsArrayBuffer(image)\n        }\n    }\n\n    handleChange(event) {\n        this.setState({\n           [event.target.name]: event.target.value\n        })\n    }\n\n    handleImages(event) {\n        this.setState({\n            images: event.target.files\n        })\n    }\n\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.binaryType = 'arraybuffer'\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.DEBUG:\n                    console.log(response.message)\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        const arrayImages = Array.from(this.state.images)\n        const preview = arrayImages.map((image, index) => \n            <img alt={image.name} src={URL.createObjectURL(image)} key={index} width='100'/>\n        )\n\n        return (\n            <div>\n                <h2>Descrição</h2>\n                <textarea placeholder='Escreva a descriçao'></textarea>\n\n                <h2>Fotos</h2>\n                <form name='photos' onSubmit={this.handleSubmit}>\n                    <label style={{border: '1px solid'}}>\n                        Selecionar imagens\n                        <input style={{display: 'none'}} onChange={this.handleImages} type='file' accept=\"image/png\" multiple/>\n                    </label>\n                    <p><b>Selecionadas</b></p>\n                    {preview}\n                    <input type='submit' value='Enviar fotos'/>\n                </form>\n\n                <h2>necessidades</h2>\n                <Needs data={[]}/>\n                <form name='needs' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='item' type='text' placeholder='Item'/>\n                    <input onChange={this.handleChange} name='amount' type='number' placeholder='Quantidade' min='1'/>\n                    <input type='submit' value='Adicionar necessidade'/>\n                </form>\n                \n            </div>\n        )\n    }\n}\n\nexport default EditCharity"]},"metadata":{},"sourceType":"module"}