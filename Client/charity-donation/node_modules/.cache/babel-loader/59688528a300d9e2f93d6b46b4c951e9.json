{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Main.js\";\nimport React, { Component } from 'react';\nimport CharityInfo from './components/CharityInfo';\nimport Connection from '../connection/Connection';\nimport ResponseType from '../connection/ResponseType';\n/**\n * Componente do React criado utilizando classes para\n * que possa ter acesso a estados. Possui metodos para \n * renderizar e buscar dados no servidor.\n * O component Main possui as Instituicoes listadas, \n * permitindo realizar buscas por Nome ou Area de atuacao.\n *\n * @class Main\n * @extends {Component}\n */\n\nclass Main extends Component {\n  /**\n   * Cria uma instancia de Main, que é um JSX Component\n   * \n   * @param {*} props propriedades passadas para o objeto\n   * @memberof Main\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      content: []\n    };\n    this.query = this.query.bind(this);\n    this.setContent = this.setContent.bind(this);\n    this.setError = this.setError.bind(this);\n    this.setupSocket = this.setupSocket.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  /**\n   * Faz uma request para o servidor enviar os dados das\n   * Instituicoes registradas (todas)\n   *\n   * @memberof Main\n   */\n\n\n  query() {\n    const filter = {\n      key: \"\",\n      value: \"\"\n    };\n    const msg = {\n      type: ResponseType.CHARITIES,\n      message: JSON.stringify(filter)\n    };\n    if (this.socket.readyState === this.socket.OPEN) this.socket.send(JSON.stringify(msg));else setTimeout(this.query, 10);\n  }\n  /**\n   * Faz uma request para o servidor enviar os dados das\n   * Instituicoes registradas, utilizando o filtro selecionado\n   * para realizar as buscas.\n   *\n   * @memberof Main\n   */\n\n\n  search() {\n    if (!this.state.keySearch) {\n      this.query();\n      return;\n    }\n\n    if (!this.state.valueSearch) {\n      this.query();\n      return;\n    }\n\n    const filter = {\n      key: this.state.keySearch,\n      value: this.state.valueSearch\n    };\n    const msg = {\n      type: ResponseType.CHARITIES,\n      message: JSON.stringify(filter)\n    };\n    if (this.socket.readyState === this.socket.OPEN) this.socket.send(JSON.stringify(msg));else setTimeout(this.query, 10);\n  }\n  /**\n   * Muda o estado da pagina, guardando \n   * o conteudo pesquisado no servidor\n   *\n   * @param {Object} content objeto contendo os dados\n   * @memberof Main\n   */\n\n\n  setContent(content) {\n    this.setState({\n      error: false,\n      loading: false,\n      content: JSON.parse(content)\n    });\n  }\n  /**\n   * Muda o estado da pagina para mostrar um erro ocorrido\n   * no carregamento da pagina\n   *\n   * @param {String} error mensagem de erro\n   * @memberof Main\n   */\n\n\n  setError(error) {\n    this.setState({\n      error: true,\n      errorMessage: error\n    });\n  }\n  /**\n   * Realiza a configuracao do WebSocket (conexao Client-Server)\n   * para realizar a comunicacao e receber os dados \n   *\n   * @memberof Main\n   */\n\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          this.setContent(response.message);\n          break;\n\n        case ResponseType.FAIL:\n          this.setError(response.message);\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n  /**\n   * Utilizado para gerenciar as submissoes dos \n   * formularios da pagina, realizando a chamada \n   * da busca.\n   *\n   * @param {*} event evento de submissao no form\n   * @memberof Main\n   */\n\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.setState({\n      loading: true\n    });\n    this.search();\n  }\n  /**\n   * Utilizado para gerenciar as alteracoes nos \n   * formularios da pagina, guardando os valores no\n   * estado\n   *\n   * @param {*} event evento de mudanca no form\n   * @memberof Main\n   */\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  /**\n   * Metodo built-in da classe Component que é\n   * chamado sempre que o componente é montado\n   *\n   * @memberof Main\n   */\n\n\n  componentDidMount() {\n    this.setupSocket();\n    this.query();\n  }\n  /**\n   * Metodo built-in do component react que retorna o componente JSX\n   * a ser renderizado na tela.\n   * Possui campos para a realizacao da busca por nome ou area de atuacao,\n   * alem de uma listagem de todas as Instituicoes.\n   *\n   * @returns JSX Component\n   * @memberof Main\n   */\n\n\n  render() {\n    const infos = this.state.content.map((charity, index) => React.createElement(CharityInfo, {\n      key: index,\n      data: charity,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      className: 'content main',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: 'search',\n      onChange: this.handleChange,\n      name: \"valueSearch\",\n      type: \"text\",\n      placeholder: \"Pesquisar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: 'type',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"radio\",\n      value: \"name\",\n      name: \"keySearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), \"Busca por nome\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      type: \"radio\",\n      value: \"field\",\n      name: \"keySearch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), \"Busca por \\xE1rea de atua\\xE7\\xE3o\")), React.createElement(\"form\", {\n      name: \"search\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Pesquisar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    })), this.state.error ? React.createElement(\"p\", {\n      className: 'error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, this.state.errorMessage) : this.state.loading ? React.createElement(\"p\", {\n      className: 'loading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Loading data...\") : React.createElement(\"div\", {\n      className: 'charities',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, infos));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Main.js"],"names":["React","Component","CharityInfo","Connection","ResponseType","Main","constructor","props","state","loading","content","query","bind","setContent","setError","setupSocket","handleChange","handleSubmit","filter","key","value","msg","type","CHARITIES","message","JSON","stringify","socket","readyState","OPEN","send","setTimeout","search","keySearch","valueSearch","setState","error","parse","errorMessage","onmessage","r","response","data","SUCCESS","FAIL","event","preventDefault","target","name","componentDidMount","render","infos","map","charity","index"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport CharityInfo from './components/CharityInfo'\nimport Connection from '../connection/Connection'\nimport ResponseType from '../connection/ResponseType'\n\n/**\n * Componente do React criado utilizando classes para\n * que possa ter acesso a estados. Possui metodos para \n * renderizar e buscar dados no servidor.\n * O component Main possui as Instituicoes listadas, \n * permitindo realizar buscas por Nome ou Area de atuacao.\n *\n * @class Main\n * @extends {Component}\n */\nclass Main extends Component {\n    /**\n     * Cria uma instancia de Main, que é um JSX Component\n     * \n     * @param {*} props propriedades passadas para o objeto\n     * @memberof Main\n     */\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            content: []\n        }\n\n        this.query = this.query.bind(this)\n        this.setContent = this.setContent.bind(this)\n        this.setError = this.setError.bind(this)\n        this.setupSocket = this.setupSocket.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    /**\n     * Faz uma request para o servidor enviar os dados das\n     * Instituicoes registradas (todas)\n     *\n     * @memberof Main\n     */\n    query() {\n        const filter = {\n            key: \"\",\n            value: \"\"\n        }\n\n        const msg = {\n            type: ResponseType.CHARITIES,\n            message: JSON.stringify(filter)\n        }\n\n        if (this.socket.readyState === this.socket.OPEN)\n            this.socket.send(JSON.stringify(msg))\n        else setTimeout(this.query, 10)\n    }\n\n    /**\n     * Faz uma request para o servidor enviar os dados das\n     * Instituicoes registradas, utilizando o filtro selecionado\n     * para realizar as buscas.\n     *\n     * @memberof Main\n     */\n    search() {\n        if (!this.state.keySearch) {\n            this.query()\n            return\n        }\n        if (!this.state.valueSearch) {\n            this.query()\n            return\n        }\n\n        const filter = {\n            key: this.state.keySearch,\n            value: this.state.valueSearch\n        }\n\n        const msg = {\n            type: ResponseType.CHARITIES,\n            message: JSON.stringify(filter)\n        }\n\n        if (this.socket.readyState === this.socket.OPEN)\n            this.socket.send(JSON.stringify(msg))\n        else setTimeout(this.query, 10)\n    }\n\n    /**\n     * Muda o estado da pagina, guardando \n     * o conteudo pesquisado no servidor\n     *\n     * @param {Object} content objeto contendo os dados\n     * @memberof Main\n     */\n    setContent(content) {\n        this.setState({\n            error: false,\n            loading: false,\n            content: JSON.parse(content)\n        })\n    }\n\n    /**\n     * Muda o estado da pagina para mostrar um erro ocorrido\n     * no carregamento da pagina\n     *\n     * @param {String} error mensagem de erro\n     * @memberof Main\n     */\n    setError(error) {\n        this.setState({\n            error: true,\n            errorMessage: error\n        })\n    }\n\n    /**\n     * Realiza a configuracao do WebSocket (conexao Client-Server)\n     * para realizar a comunicacao e receber os dados \n     *\n     * @memberof Main\n     */\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    this.setContent(response.message)\n                    break\n                case ResponseType.FAIL:\n                    this.setError(response.message)\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    /**\n     * Utilizado para gerenciar as submissoes dos \n     * formularios da pagina, realizando a chamada \n     * da busca.\n     *\n     * @param {*} event evento de submissao no form\n     * @memberof Main\n     */\n    handleSubmit(event) {\n        event.preventDefault()\n        this.setState({\n            loading: true\n        })\n        this.search()\n    }\n\n    /**\n     * Utilizado para gerenciar as alteracoes nos \n     * formularios da pagina, guardando os valores no\n     * estado\n     *\n     * @param {*} event evento de mudanca no form\n     * @memberof Main\n     */\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }  \n\n    /**\n     * Metodo built-in da classe Component que é\n     * chamado sempre que o componente é montado\n     *\n     * @memberof Main\n     */\n    componentDidMount() {\n        this.setupSocket()\n        this.query()\n    }\n\n    /**\n     * Metodo built-in do component react que retorna o componente JSX\n     * a ser renderizado na tela.\n     * Possui campos para a realizacao da busca por nome ou area de atuacao,\n     * alem de uma listagem de todas as Instituicoes.\n     *\n     * @returns JSX Component\n     * @memberof Main\n     */\n    render() {\n        const infos = this.state.content.map(\n            (charity, index) => <CharityInfo key={index} data={charity} />\n        )\n\n        return (\n            <div className={'content main'}>\n                <input className={'search'} onChange={this.handleChange} name='valueSearch' type='text' placeholder='Pesquisar'></input>\n                <div className={'type'}>\n                    <label>\n                        <input onChange={this.handleChange} type='radio' value='name' name='keySearch'></input>\n                        Busca por nome\n                    </label>\n                    <label>\n                        <input onChange={this.handleChange} type='radio' value='field' name='keySearch'></input>\n                        Busca por área de atuação\n                    </label>\n                </div>\n                <form name='search' onSubmit={this.handleSubmit}>\n                    <input type='submit' value='Pesquisar'></input>\n                </form>\n                {   \n                    this.state.error ?\n                    <p className={'error'}>{this.state.errorMessage}</p> :\n                    this.state.loading ? \n                    <p className={'loading'}>Loading data...</p> :                 \n                    <div className={'charities'}>\n                        {infos}\n                    </div>\n               }\n            </div>\n        )\n    }\n}\n\nexport default Main"]},"metadata":{},"sourceType":"module"}