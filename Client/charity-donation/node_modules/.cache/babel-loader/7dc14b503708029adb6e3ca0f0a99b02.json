{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Received.js\";\nimport React, { Component } from 'react';\nimport Item from './components/Item';\nimport ResponseType from '../connection/ResponseType';\nimport Connection from '../connection/Connection';\nimport { Redirect } from 'react-router-dom';\n\nclass Received extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      content: [],\n      errorMessage: '',\n      error: false\n    };\n    this.setupSocket = this.setupSocket.bind(this);\n    this.setContent = this.setContent.bind(this);\n    this.query = this.query.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  query() {\n    const msg = {\n      id: sessionStorage.getItem('id'),\n      type: ResponseType.DONATIONS_RECEIVED\n    };\n    if (this.socket.readyState === this.socket.OPEN) this.socket.send(JSON.stringify(msg));else setTimeout(this.query, 10);\n  }\n\n  setContent(content) {\n    this.setState({\n      error: false,\n      loading: false,\n      content: JSON.parse(content)\n    });\n  }\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          switch (response.id) {\n            case -6:\n              this.setContent(response.message);\n              break;\n\n            case -11:\n              break;\n\n            default:\n          }\n\n          break;\n\n        case ResponseType.FAIL:\n          switch (response.id) {\n            case -6:\n              break;\n\n            case -11:\n              break;\n\n            default:\n          }\n\n          break;\n\n        default:\n          this.setState({\n            error: true,\n            errorMessage: 'Erro: Indefinido.'\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n    this.query();\n  }\n\n  validateDonation(id) {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.validateDonation, 10);\n    const msg = {\n      id: id,\n      type: ResponseType.VALIDATE_DONATION\n    };\n    this.socket.send(JSON.stringify(msg));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.validateDonation(event.target.name);\n  }\n\n  render() {\n    const content = this.state.content;\n    const donations = content.map((donation, index) => React.createElement(\"form\", {\n      key: index,\n      name: donation.id,\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Item, {\n      data: donation,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), donation.status === 0 ? React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Confirmar recebimento\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Recebimento confirmado\")));\n    return !(sessionStorage.getItem('type') === 'CHARITY') ? React.createElement(Redirect, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }) : this.state.error ? React.createElement(\"p\", {\n      className: 'error',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, this.state.errorMessage) : this.state.loading ? React.createElement(\"p\", {\n      className: 'loading',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Loading data...\") : React.createElement(\"div\", {\n      className: 'content received',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Doa\\xE7\\xF5es recebidas\"), React.createElement(\"div\", {\n      className: 'donations',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, donations.length !== 0 ? donations : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"N\\xE3o existem doa\\xE7\\xF5es feitas para voc\\xEA.\")));\n  }\n\n}\n\nexport default Received;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Received.js"],"names":["React","Component","Item","ResponseType","Connection","Redirect","Received","constructor","props","state","loading","content","errorMessage","error","setupSocket","bind","setContent","query","handleSubmit","msg","id","sessionStorage","getItem","type","DONATIONS_RECEIVED","socket","readyState","OPEN","send","JSON","stringify","setTimeout","setState","parse","onmessage","r","response","data","SUCCESS","message","FAIL","componentDidMount","validateDonation","VALIDATE_DONATION","event","preventDefault","target","name","render","donations","map","donation","index","status","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Item from './components/Item'\nimport ResponseType from '../connection/ResponseType'\nimport Connection from '../connection/Connection'\nimport { Redirect } from 'react-router-dom'\n\nclass Received extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loading: true,\n            content: [],\n            errorMessage: '',\n            error: false\n        }\n\n        this.setupSocket = this.setupSocket.bind(this)\n        this.setContent = this.setContent.bind(this)\n        this.query = this.query.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n\n    query() {\n        const msg = {\n            id: sessionStorage.getItem('id'),\n            type: ResponseType.DONATIONS_RECEIVED\n        }\n\n        if (this.socket.readyState === this.socket.OPEN)\n            this.socket.send(JSON.stringify(msg))\n        else setTimeout(this.query, 10)\n    }\n\n    setContent(content) {\n        this.setState({\n            error: false,\n            loading: false,\n            content: JSON.parse(content)\n        })\n    }\n\n    setupSocket() {\n        this.socket = Connection\n\n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    switch (response.id) {\n                        case -6:\n                            this.setContent(response.message)\n                            break\n                        case -11:\n                            break\n                        default:\n                    }\n                    break\n                case ResponseType.FAIL:\n                    switch (response.id) {\n                        case -6:\n                            break\n                        case -11:\n                            break\n                        default:\n                    }\n                    break\n                default:\n                    this.setState({\n                        error: true,\n                        errorMessage: 'Erro: Indefinido.'\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n        this.query()\n    }\n\n    validateDonation(id) {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.validateDonation, 10)\n\n        const msg = {\n            id: id,\n            type: ResponseType.VALIDATE_DONATION\n        }\n\n        this.socket.send(JSON.stringify(msg))\n    }\n\n    handleSubmit(event) {\n        event.preventDefault()\n        this.validateDonation(event.target.name)\n    }\n\n    render() {\n        const { content } = this.state\n\n        const donations = content.map((donation, index) => \n            <form key={index} name={donation.id} onSubmit={this.handleSubmit}>\n                <Item data={donation} />\n                <hr></hr>\n                {donation.status === 0 ?\n                <input type='submit' value='Confirmar recebimento'></input> :\n                <p>Recebimento confirmado</p>}\n            </form>\n        )\n\n        return (\n            !(sessionStorage.getItem('type') === 'CHARITY') ?\n                <Redirect to='/' />:\n            this.state.error ?\n                <p className={'error'}>{this.state.errorMessage}</p> :\n            this.state.loading ?\n                <p className={'loading'}>Loading data...</p> :\n            <div className={'content received'}>\n                <h2>Doações recebidas</h2>\n                <div className={'donations'}>\n                    {donations.length !== 0 ?\n                    donations :\n                    <p>Não existem doações feitas para você.</p>}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Received"]},"metadata":{},"sourceType":"module"}