{"ast":null,"code":"var _jsxFileName = \"/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Login.js\";\nimport React, { Component } from 'react';\nimport ResponseType from '../connection/ResponseType';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loginError: ''\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  login() {\n    if (this.socket.readyState !== this.socket.OPEN) setTimeout(this.login, 10);\n    const _this$state = this.state,\n          username = _this$state.username,\n          password = _this$state.password;\n\n    if (username && password) {\n      const hashPass = CryptoJS.MD5(password);\n      const user = {\n        username: username,\n        password: hashPass.toString()\n      };\n      const msg = {\n        type: ResponseType.LOGIN,\n        message: JSON.stringify(user)\n      };\n      this.socket.send(JSON.stringify(msg));\n    } else {\n      this.setState({\n        loginError: 'Insira o nome e a senha'\n      });\n    }\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.login();\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  logged() {\n    localStorage.setItem('id', response.id);\n    localStorage.setItem('type', response.message);\n  }\n\n  loginError() {\n    this.setState({\n      loginError: 'usuario ou senha errados'\n    });\n  } //TODO arrumar responses possiveis\n\n\n  setupSocket() {\n    this.socket = Connection;\n\n    this.socket.onmessage = r => {\n      const response = JSON.parse(r.data);\n\n      switch (response.type) {\n        case ResponseType.SUCCESS:\n          this.logged();\n          break;\n\n        case ResponseType.FAIL:\n          this.loginError();\n          break;\n\n        default:\n          this.setState({\n            error: true\n          });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.setupSocket();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Logar\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.error), React.createElement(\"form\", {\n      name: \"login\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.handleChange,\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"senha\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/pages/Login.js"],"names":["React","Component","ResponseType","Login","constructor","props","state","loginError","handleSubmit","bind","handleChange","login","socket","readyState","OPEN","setTimeout","username","password","hashPass","CryptoJS","MD5","user","toString","msg","type","LOGIN","message","JSON","stringify","send","setState","event","preventDefault","target","name","value","logged","localStorage","setItem","response","id","setupSocket","Connection","onmessage","r","parse","data","SUCCESS","FAIL","error","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ResponseType from '../connection/ResponseType';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            loginError: ''\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    login() {\n        if (this.socket.readyState !== this.socket.OPEN) \n            setTimeout(this.login, 10)\n            \n        const { username, password } = this.state\n        if (username && password) {\n            const hashPass = CryptoJS.MD5(password)\n            const user = {\n                username: username,\n                password: hashPass.toString()\n            }\n\n            const msg = {\n                type: ResponseType.LOGIN,\n                message: JSON.stringify(user)\n            }\n\n            this.socket.send(JSON.stringify(msg))\n        } else {\n            this.setState({\n                loginError: 'Insira o nome e a senha'\n            })\n        }\n    }\n    \n    handleSubmit(event) {\n        event.preventDefault()\n        this.login()\n    } \n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    logged() {\n        localStorage.setItem('id', response.id)\n        localStorage.setItem('type', response.message)            \n    }\n\n    loginError() {\n        this.setState({\n            loginError: 'usuario ou senha errados'\n        })\n    }\n\n    //TODO arrumar responses possiveis\n    setupSocket() {\n        this.socket = Connection\n        \n        this.socket.onmessage = (r) => {\n            const response = JSON.parse(r.data)\n            switch (response.type) {\n                case ResponseType.SUCCESS:\n                    this.logged()\n                    break\n                case ResponseType.FAIL:\n                    this.loginError()\n                    break\n                default:\n                    this.setState({\n                        error: true\n                    })\n            }\n        }        \n    }\n\n    componentDidMount() {\n        this.setupSocket()\n    }\n\n    render() {\n        return (\n            <div>\n                <h2>Logar</h2>\n                <p>{this.state.error}</p>\n                <form name='login' onSubmit={this.handleSubmit}>\n                    <input onChange={this.handleChange} name='username' type='text' placeholder='username'></input>\n                    <input onChange={this.handleChange} name='password' type='password' placeholder='senha'></input>\n                    <input type='submit' value='login'></input>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}