{"ast":null,"code":"const Connection = () => {\n  let instance;\n  return !instance ? instance = new WebSocket(\"ws://localhost:9000\") : instance;\n};\n\nexport default Connection; // this.socket.onmessage = (r) => {\n//     const response = JSON.parse(r.data);\n//     switch (response.type) {\n//         case ResponseType.CHARITIES:\n//             // call function to read charities\n//             break;\n//         case ResponseType.CHARITY:\n//             // call function to read charity\n//             break;\n//         case ResponseType.DONATE:\n//             // call function to display donation status\n//             break;\n//         case ResponseType.DONATIONS_MADE:\n//             // call function to read donations of user\n//             break;\n//         case ResponseType.DONATIONS_RECEIVED:\n//             // call function to read donations to charity\n//             break;\n//         case ResponseType.NEEDING:\n//             // call function to display needs status\n//             break;\n//         case ResponseType.NEEDS:\n//             // call function to read needs of charity\n//             break;\n//         case ResponseType.REGISTER_CHARITY:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.REGISTER_PERSON:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.VALIDATE_DONATION:\n//             // call function to display validation status\n//             break;\n//         case ResponseType.DEBUG:\n//             this.setState({\n//                 loaded: true,\n//                 id: response.id,\n//                 message: response.message\n//             });\n//             break;\n//         default:\n//     }\n// };\n// this.socket.onopen = () => {\n//     this.login();\n// };\n// this.socket.onclose = () => {\n// };\n// this.socket.onerror = () => {\n// };","map":{"version":3,"sources":["/home/alex/Documents/usp/graduacao/terceiroSemestre/POO/Projeto/Client/charity-donation/src/connection/Connection.js"],"names":["Connection","instance","WebSocket"],"mappings":"AAEA,MAAMA,UAAU,GAAG,MAAM;AACrB,MAAIC,QAAJ;AAEA,SACI,CAACA,QAAD,GACAA,QAAQ,GAAG,IAAIC,SAAJ,CAAc,qBAAd,CADX,GAEAD,QAHJ;AAKH,CARD;;AAUA,eAAeD,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\n\nconst Connection = () => {\n    let instance\n\n    return (\n        !instance ? \n        instance = new WebSocket(\"ws://localhost:9000\") : \n        instance\n    ) \n}\n\nexport default Connection\n  \n// this.socket.onmessage = (r) => {\n//     const response = JSON.parse(r.data);\n//     switch (response.type) {\n//         case ResponseType.CHARITIES:\n//             // call function to read charities\n//             break;\n//         case ResponseType.CHARITY:\n//             // call function to read charity\n//             break;\n//         case ResponseType.DONATE:\n//             // call function to display donation status\n//             break;\n//         case ResponseType.DONATIONS_MADE:\n//             // call function to read donations of user\n//             break;\n//         case ResponseType.DONATIONS_RECEIVED:\n//             // call function to read donations to charity\n//             break;\n//         case ResponseType.NEEDING:\n//             // call function to display needs status\n//             break;\n//         case ResponseType.NEEDS:\n//             // call function to read needs of charity\n//             break;\n//         case ResponseType.REGISTER_CHARITY:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.REGISTER_PERSON:\n//             // call function to display registration status\n//             break;\n//         case ResponseType.VALIDATE_DONATION:\n//             // call function to display validation status\n//             break;\n//         case ResponseType.DEBUG:\n//             this.setState({\n//                 loaded: true,\n//                 id: response.id,\n//                 message: response.message\n//             });\n//             break;\n//         default:\n//     }\n// };\n// this.socket.onopen = () => {\n//     this.login();\n// };\n// this.socket.onclose = () => {\n// };\n// this.socket.onerror = () => {\n// };"]},"metadata":{},"sourceType":"module"}